import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

class Bug {
    private static int idCounter = 1;
    private int id;
    private String description;
    private String status;

    public Bug(String description) {
        this.id = idCounter++;
        this.description = description;
        this.status = "Open";
    }

    public int getId() {
        return id;
    }

    public String getDescription() {
        return description;
    }

    public String getStatus() {
        return status;
    }

    public void setStatus(String status) {
        this.status = status;
    }

    @Override
    public String toString() {
        return "Bug ID: " + id + ", Description: " + description + ", Status: " + status;
    }
}

class BugTracker {
    private List<Bug> bugs;

    public BugTracker() {
        bugs = new ArrayList<>();
    }

    public void addBug(String description) {
        bugs.add(new Bug(description));
    }

    public void listBugs() {
        if (bugs.isEmpty()) {
            System.out.println("No bugs found.");
        } else {
            for (Bug bug : bugs) {
                System.out.println(bug);
            }
        }
    }

    public void updateBugStatus(int id, String status) {
        for (Bug bug : bugs) {
            if (bug.getId() == id) {
                bug.setStatus(status);
                return;
            }
        }
        System.out.println("Bug not found.");
    }

    public void removeBug(int id) {
        bugs.removeIf(bug -> bug.getId() == id);
    }
}

public class BugTrackingSystem {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        BugTracker bugTracker = new BugTracker();

        while (true) {
            System.out.println("\n--- Bug Tracking System ---");
            System.out.println("1: Add Bug");
            System.out.println("2: List Bugs");
            System.out.println("3: Update Bug Status");
            System.out.println("4: Remove Bug");
            System.out.println("0: Exit");
            System.out.print("Choose an option: ");
            int choice = scanner.nextInt();
            scanner.nextLine();  // Consume newline

            switch (choice) {
                case 1:
                    System.out.print("Enter bug description: ");
                    String description = scanner.nextLine();
                    bugTracker.addBug(description);
                    System.out.println("Bug added.");
                    break;
                case 2:
                    System.out.println("Listing all bugs:");
                    bugTracker.listBugs();
                    break;
                case 3:
                    System.out.print("Enter bug ID to update: ");
                    int idToUpdate = scanner.nextInt();
                    scanner.nextLine();  // Consume newline
                    System.out.print("Enter new status (Open/Closed): ");
                    String status = scanner.nextLine();
                    bugTracker.updateBugStatus(idToUpdate, status);
                    System.out.println("Bug status updated.");
                    break;
                case 4:
                    System.out.print("Enter bug ID to remove: ");
                    int idToRemove = scanner.nextInt();
                    scanner.nextLine();  // Consume newline
                    bugTracker.removeBug(idToRemove);
                    System.out.println("Bug removed.");
                    break;
                case 0:
                    System.out.println("Exiting the system. Goodbye!");
                    scanner.close();
                    return;
                default:
                    System.out.println("Invalid choice. Please try again.");
            }
        }
    }
}
